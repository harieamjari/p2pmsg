# This is a basic workflow to help you get started with Actions

name: Flutter

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master", "dev" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron: '30 10 * * 5'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_android:
    runs-on: ubuntu-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.19.0

      - name: Setup Java 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: "temurin"
        # - run: sudo apt install openjdk-17-jdk

      - run: flutter upgrade
      - run: flutter pub get
      - run: flutter test
      - run: flutter build apk

      - name: Prepare upload
        run: |
          echo "ARTIFACT_APK=p2pmsg-apk-$(date -I)-$(date +%s)" >> $GITHUB_ENV
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_APK }}
          path: build/app/outputs/flutter-apk
  build_web:
    runs-on: ubuntu-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.19.0

      - run: flutter upgrade
      - run: flutter pub get
      - run: flutter test
      - run: flutter build web

      - name: Prepare upload
        run: |
          sed -i 's@<base href="/">@@g' build/web/index.html
      #        run: |
      #          echo "ARTIFACT_WEB=p2pmsg-web-$(date -I)-$(date +%s)" >> $GITHUB_ENV
      - name: Upload
        uses: actions/upload-pages-artifact@v3
        with:
          path: build/web
    outputs:
      ARTIFACT_WEB: ${{ env.ARTIFACT_WEB }}


  deploy:
    needs: [build_web]
    permissions: 
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        #        with:
          #          artifact_name: ${{ needs.build_web.outputs.ARTIFACT_WEB }}
          #token: ${{ secrets.DEPLOY_TOKEN }}

